{"remainingRequest":"D:\\Git\\pmdb-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Git\\pmdb-vue\\src\\components\\movies\\Movie.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Git\\pmdb-vue\\src\\components\\movies\\Movie.vue","mtime":1591209849718},{"path":"D:\\Git\\pmdb-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Git\\pmdb-vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"D:\\Git\\pmdb-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Git\\pmdb-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwQWN0aW9ucywgbWFwR2V0dGVyc30gZnJvbSAndnVleCcKaW1wb3J0IE5hdkJhciBmcm9tICIuLi9OYXZCYXIiOwoKZXhwb3J0IGRlZmF1bHQgewogICAgY29tcG9uZW50czoge05hdkJhcn0sCiAgICBwcm9wczogWyJpZCJdLAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB0aXRsZTogJ01vdmllJywKICAgICAgICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgICAgICAgaW1nVXJsOiAiaHR0cHM6Ly9pbWFnZS50bWRiLm9yZy90L3Avb3JpZ2luYWwiLAogICAgICAgICAgICBiYWNrZHJvcFVybDogImh0dHBzOi8vaW1hZ2UudG1kYi5vcmcvdC9wL3cxOTIwX2FuZF9oODAwX211bHRpX2ZhY2VzIgogICAgICAgIH07CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcEFjdGlvbnMoWydmZXRjaE1vdmllJ10pCiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmZldGNoTW92aWUodGhpcy5pZCkKICAgICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgfSkKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcEdldHRlcnMoWydnZXRNb3ZpZSddKQogICAgfQp9Owo="},{"version":3,"sources":["Movie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Movie.vue","sourceRoot":"src/components/movies","sourcesContent":["<template>\r\n  <v-content>\r\n    <NavBar :title=\"title\"/>\r\n    <v-container v-if=\"loading\" fill-height class=\"justify-center\">\r\n      <div>\r\n        <v-progress-circular\r\n                :size=\"100\"\r\n                color=\"primary\"\r\n                indeterminate\r\n        ></v-progress-circular>\r\n      </div>\r\n    </v-container>\r\n\r\n    <v-container v-else class=\"pa-0\" fluid>\r\n      <v-parallax :src=\"backdropUrl + getMovie.backdrop_path\" class=\"pa-0\">\r\n        <div class=\"wrap\">\r\n          <div class=\"big-teaser-content\">\r\n            <div class=\"big-teaser-data-wrap\">\r\n              <div class=\"big-teaser-item-data\">\r\n                <span class=\"item-year\">{{ getMovie.release_date | moment('YYYY') }}</span>\r\n                <span class=\"item-title\">{{ getMovie.title }}</span>\r\n                <span class=\"item-genre\">\r\n              <a :key=\"index\" v-for=\"(genres, index) in getMovie.genres\">\r\n                {{ genres.name }}\r\n              </a>\r\n            </span>\r\n\r\n              </div>\r\n              <div class=\"big-teaser-buttons\">\r\n                <a :href=\"getMovie.homepage\" class=\"button-netflix\" target=\"_blank\"\r\n                   v-if=\"getMovie.homepage.includes('netflix')\">\r\n                  Netflix\r\n                </a>\r\n                <a :href=\"getMovie.homepage\" class=\"button-amazon\" target=\"_blank\"\r\n                   v-if=\"getMovie.homepage.includes('amazon')\">\r\n                  Amazon Prime\r\n                </a>\r\n                <a :href=\"getMovie.homepage\" class=\"button-disney\" target=\"_blank\"\r\n                   v-if=\"getMovie.homepage.includes('disney')\">\r\n                  Disney+\r\n                </a>\r\n                <a :href=\"getMovie.homepage\" class=\"button-apple\" target=\"_blank\"\r\n                   v-if=\"getMovie.homepage.includes('apple')\">\r\n                  Apple TV+\r\n                </a>\r\n                <!-- TODO: nog aanpassen in database om youtube trailer id te krijgen -->\r\n                <!--<span @click=\"openTrailer()\" v-if=\"getMovie.youtube_key\" class=\"button-trailer\" prepend-icon=\"mdi-play\"> Watch Trailer</span>-->\r\n\r\n                <a :href=\"`https://www.themoviedb.org/movie/${getMovie.tmdb_id}`\" class=\"button-tmdb-rating\"\r\n                   target=\"_blank\">\r\n                  <i v-if=\"getMovie.tmdb_id\"><strong><!--{{ getMovie.tmdb_id }}--></strong> TMDb</i>\r\n                  <i v-else>No TMDB Rating</i>\r\n                </a>\r\n                <a :href=\"`http://www.imdb.com/title/${getMovie.imdb_id}`\" class=\"button-imdb-rating\" target=\"_blank\"\r\n                   v-if=\"getMovie.imdb_id\">\r\n                  <i v-if=\"getMovie.imdb_id\"><strong><!--{{ getMovie.imdb_id }}--></strong> IMDb</i>\r\n                  <i v-else>No IMDb Rating</i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </v-parallax>\r\n      <div class=\"subpage-content\">\r\n        <div class=\"wrap\">\r\n          <div class=\"subpage-sidebar\">\r\n            <div class=\"subpage-poster-wrap\">\r\n              <img :src=\"imgUrl + getMovie.poster_path\" height=\"408\" width=\"272\" alt=\"poster image\"/>\r\n            </div>\r\n          </div>\r\n          <div class=\"subpage-overview\">\r\n            <h2 class=\"display-1 my-4\">Overview</h2>\r\n            <p>{{ getMovie.overview }}</p>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </v-container>\r\n  </v-content>\r\n</template>\r\n\r\n<script>\r\n    import {mapActions, mapGetters} from 'vuex'\r\n    import NavBar from \"../NavBar\";\r\n\r\n    export default {\r\n        components: {NavBar},\r\n        props: [\"id\"],\r\n        data() {\r\n            return {\r\n                title: 'Movie',\r\n                loading: true,\r\n                imgUrl: \"https://image.tmdb.org/t/p/original\",\r\n                backdropUrl: \"https://image.tmdb.org/t/p/w1920_and_h800_multi_faces\"\r\n            };\r\n        },\r\n        methods: {\r\n            ...mapActions(['fetchMovie'])\r\n        },\r\n        mounted() {\r\n            this.fetchMovie(this.id)\r\n                .then(() => {\r\n                    this.loading = false\r\n                })\r\n        },\r\n        computed: {\r\n            ...mapGetters(['getMovie'])\r\n        }\r\n    };\r\n</script>\r\n"]}]}
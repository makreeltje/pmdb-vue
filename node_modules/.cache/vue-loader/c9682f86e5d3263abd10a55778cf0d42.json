{"remainingRequest":"D:\\Git\\pmdb-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Git\\pmdb-vue\\src\\components\\SearchMovie.vue?vue&type=style&index=0&id=6cd80730&lang=stylus&scoped=true&","dependencies":[{"path":"D:\\Git\\pmdb-vue\\src\\components\\SearchMovie.vue","mtime":1587364124066},{"path":"D:\\Git\\pmdb-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Git\\pmdb-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Git\\pmdb-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Git\\pmdb-vue\\node_modules\\stylus-loader\\index.js","mtime":1519606876000},{"path":"D:\\Git\\pmdb-vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"D:\\Git\\pmdb-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Git\\pmdb-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi52LXByb2dyZXNzLWNpcmN1bGFyCiAgbWFyZ2luOiAxcmVtCg=="},{"version":3,"sources":["SearchMovie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA","file":"SearchMovie.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n  <v-container v-if=\"loading\">\n    <div class=\"text-xs-center\">\n      <v-progress-circular\n        indeterminate\n        :size=\"150\"\n        :width=\"8\"\n        color=\"green\">\n      </v-progress-circular>\n    </div>\n  </v-container>\n\n  <v-container v-else-if=\"noData\">\n    <div class=\"text-xs-center\">\n    <h2>No Movie in API with {{this.name}}</h2>\n    </div>\n  </v-container>\n\n  <v-container v-else grid-list-xl>\n    <v-layout wrap>\n      <v-flex xs4\n        v-for=\"(item, index) in movieResponse\"\n        :key=\"index\"\n        mb-2>\n        <v-card>\n          <v-img\n            :src=\"item.Poster\"\n            aspect-ratio=\"1\"\n          ></v-img>\n\n          <v-card-title primary-title>\n            <div>\n              <h2>{{item.Title}}</h2>\n              <div>Year: {{item.Year}}</div>\n              <div>Type: {{item.Type}}</div>\n              <div>IMDB-id: {{item.imdbID}}</div>\n            </div>\n          </v-card-title>\n\n          <v-card-actions class=\"justify-center\">\n            <v-btn flat\n              color=\"green\"\n              @click=\"singleMovie(item.imdbID)\"\n              >View</v-btn>\n          </v-card-actions>\n\n        </v-card>\n      </v-flex>\n  </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport MovieService from '@/services/MovieApi'\nexport default {\n  props: ['name'],\n  data () {\n    return {\n      movieResponse: [],\n      loading: true,\n      noData: false\n    }\n  },\n  methods: {\n    singleMovie (id) {\n      this.$router.push('/movie/' + id)\n    },\n    fetchResult (value) {\n      MovieService.fetchSingleMovie(value)\n        .then(response => {\n          if (response.Response === 'True') {\n            this.movieResponse = response.Search\n            this.loading = false\n            this.noData = false\n          } else {\n            this.noData = true\n            this.loading = false\n          }\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n  },\n  mounted () {\n    this.fetchResult(this.name)\n  },\n  watch: {\n    name (value) {\n      this.fetchResult(value)\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n  .v-progress-circular\n    margin: 1rem\n</style>"]}]}